@model FirstNetCoreMVC.ViewModels.MovieViewModel
@{
    ViewData["Title"] = "Index";
}
<h2>Index</h2>
<p>
    <a asp-action="Create" asp-route-type="Create" class="btn btn-default">Create New</a>
</p>

<form asp-controller="Movies" asp-action="Index" method="get">
    <p>
        <select selected="@Model.searchGenre" asp-items="@Model.genres" asp-for="@Model.searchGenre" onchange="this.form.submit()">
            <option value="">All</option>
        </select>

        Title: <input type="text" value="@Model.searchString" asp-for="@Model.searchString" />
        <input type="submit" value="Filter" />
    </p>
</form>

<table class=" table">
    <thead>
        <tr>
            <th> <a asp-action="Index" asp-route-orderBy="Title"> @Html.DisplayNameFor(model => model.movies[0].Title)</a> </th>
            <th> @Html.DisplayNameFor(model => model.movies[0].ReleaseDate)</th>
            <th> @Html.DisplayNameFor(model => model.movies[0].Genre) </th>
            <th> @Html.DisplayNameFor(model => model.movies[0].Price)</th>
            <th> @Html.DisplayNameFor(model => model.movies[0].Rating)</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.movies)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ReleaseDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Genre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Rating)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ID" asp-route-type="Edit" class="btn btn-default">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.ID" class="btn btn-default">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.ID" class="btn btn-default">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.movies.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.movies.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-OrderBy="@Model.OrderBy"
   asp-route-page="@(Model.movies.PageIndex - 1)"
   asp-route-searchString="@Model.searchString"
   asp-route-searchGenre="@Model.searchGenre"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-OrderBy="@Model.OrderBy"
   asp-route-page="@(Model.movies.PageIndex + 1)"
   asp-route-searchString="@Model.searchString"
   asp-route-searchGenre="@Model.searchGenre"
   class="btn btn-default @nextDisabled">
    Next
</a>